Package coolc.compiler.autogen;

Helpers
    all = [0 .. 0xFFFF];
    cr = 13;
    lf = 10;
    
    a = ['a' + 'A'];
    b = ['b' + 'B'];
    c = ['c' + 'C'];
    d = ['d' + 'D'];
    e = ['e' + 'E'];
    f = ['f' + 'F'];
    g = ['g' + 'G'];
    h = ['h' + 'H'];
    i = ['i' + 'I'];
    j = ['j' + 'J'];
    k = ['k' + 'K'];
    l = ['l' + 'L'];
    m = ['m' + 'M'];
    n = ['n' + 'N'];
    o = ['o' + 'O'];
    p = ['p' + 'P'];
    q = ['q' + 'Q'];
    r = ['r' + 'R'];
    s = ['s' + 'S'];
    t = ['t' + 'T'];
    u = ['u' + 'U'];
    v = ['v' + 'V'];
    w = ['w' + 'W'];
    x = ['x' + 'X'];
    y = ['y' + 'Y'];
    z = ['z' + 'Z'];
    
    alpha = ['A'..'Z'] | ['a'..'z'] | [0x7F .. 0xFF];
    ucase = ['A'..'Z'];
    lcase = ['a'..'z'];
    digit = ['0'..'9'];
    


    // 8 - backspace
    // 9 - tab
    // 10 - lf, nl
    // 11 - vertical tab
    // 12 - form feed
    // 13 - cr
    blank = (' ' | 8 | 9 | lf | 11 | 12 | cr );
    
Tokens
    // klass fi if in inherits isvoid let loop pool then else while case esac new of not
    // lbrace rbrace lparen rparen semi colon 
    // mult div plus minus neg lt le eq at
    // assign darrow comma dot
    // error_star_lpar int_const bool_const type_id object_id str_const str_err comment
	hola = 'hola';
	else = e l s e;
	blank = blank+;
	bool_const = ('t' r u e )|('f' a l s e);
	object_id = lcase (alpha | digit | '_')*;
	type_id  = ucase (alpha | digit | '_')*;

Ignored Tokens
	blank;
	
Productions
	source = hola;
	